<div class="card">
    <div class="card-body">

<SearchAndDisplayInventoriesComponent OnInventorySelected="OnInventorySelected"></SearchAndDisplayInventoriesComponent>

@if (this.Product.ProductInventories != null && this.Product.ProductInventories.Count > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Quantity</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var prodInv in this.Product.ProductInventories)
            {
                <tr>
                    <td>@prodInv.Inventory?.InventoryName</td>
                    <td><input type="number" min="1" @bind-value="prodInv.InventoryQuantity" /></td>
                    <td>
                        <button class="btn btn-sm btn-danger"
                                type="button"
                        @onclick="@(()=>RemoveInventory(prodInv))">
                            Remove
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

}

</div>
</div>


@code {


    [Parameter]
    public Product Product { get; set; } = new();


    private void RemoveInventory(ProductInventory productInventory)
    {
        this.Product.ProductInventories.Remove(productInventory);
    }

    private void OnInventorySelected(Inventory inventory)
    {
        this.Product.AddInventory(inventory);
    }
}
