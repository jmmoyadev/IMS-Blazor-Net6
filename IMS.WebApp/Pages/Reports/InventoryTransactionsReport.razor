@page "/inventoryreport"

<h3>Inventory Transactions </h3>
<br />

@inject ISearchInventoryTransactionsUseCase _searchInventoryTransactionsUseCase

@inject IJSRuntime _jsRuntime


<div id="printarea">

    <div class="row">
        <div class="col">
            <label for="inv">Inventory Name</label>
            <input type="text" id="inv" class="form-control" @bind-value="invName" />
        </div>

        <div class="col">
            <label for="df">Date From</label>
            <input type="date" id="df" class="form-control" @bind-value="dateFrom" />
        </div>

        <div class="col">
            <label for="dt">Date To</label>
            <input type="date" id="dt" class="form-control" @bind-value="dateTo" />
        </div>

        <div class="col">
            <label for="at">Inventory Name</label>
            <select id="at" class="form-select" @bind="activityTypeId">
                <option value="0"></option>
                <option value="1">Purchase Inventory</option>
                <option value="2">Produce Product</option>
            </select>
        </div>

        <div class="col">
            <label> &nbsp;</label>
            <button type="button" class="btn btn-primary form-control" @onclick="SearchInventories">Search</button>
        </div>

        <div class="col">
            <label> &nbsp;</label>
            <button type="button" class="btn btn-primary form-control" @onclick="PrintReport">Print</button>
        </div>
    </div>

    <br />
    <table class="table table-striped">
        <thead class="table-dark">
            <tr>
                <td>Date</td>
                <td>Inventory</td>
                <td>Activity</td>
                <td>Qty Before</td>
                <td>Qty After</td>
                <td class="text-end">Unit Price</td>
                <td>PO #</td>
                <td>Production #</td>
                <td>Done By</td>
            </tr>
        </thead>
        <tbody>
            @if (inventoryTransactions != null && inventoryTransactions.Count() > 0)
            {
                @foreach (var it in inventoryTransactions)
                {
                    <tr>
                        <td>@it.TransactionDate.ToString("dd/MM/yyyy")</td>
                        <td>@it.Inventory?.InventoryName</td>
                        <td>
                            @if (it.ActivityType == InventoryTransactionType.PurchaseInventory)
                            {
                                <text>Purchase</text>
                            }
                            else if (it.ActivityType == InventoryTransactionType.ProduceProduct)
                            {
                                <text>Produce</text>
                            }
                        </td>
                        <td>@it.QuantityBefore</td>
                        <td>@it.QuantityAfter</td>
                        <td class="text-end">@it.UnitPrice?.ToString("C")</td>
                        <td>@it.PurchaseOrderNumber</td>
                        <td>@it.ProductionNumber</td>
                        <td>@it.DoneBy</td>

                    </tr>
                }
            }
        </tbody>
    </table>

</div>

@code {


    private string invName = string.Empty;
    private DateTime? dateFrom;
    private DateTime? dateTo;
    private int activityTypeId = 0;
    private IEnumerable<InventoryTransaction>? inventoryTransactions;


    private async Task SearchInventories()
    {

        InventoryTransactionType? invTransactionType = null;
        if (activityTypeId != 0) invTransactionType = (InventoryTransactionType)activityTypeId;


        inventoryTransactions = await _searchInventoryTransactionsUseCase.ExecuteAsync(
            invName,
            dateFrom,
            dateTo,
            invTransactionType
        );
    }

    private async Task PrintReport()
    {
        await _jsRuntime.InvokeVoidAsync("print");
    }


}
