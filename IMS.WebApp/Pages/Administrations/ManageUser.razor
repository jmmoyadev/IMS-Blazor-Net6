@page "/manageuser"
@using Microsoft.AspNetCore.Identity;
@using System.Security.Claims;


@attribute [Authorize(Policy = "Administration")]

@inject UserManager<IdentityUser> _userManager
@inject NavigationManager _navigationManager

<h3>ManageUser</h3>
<br />
@if (_userViewModel != null)
{
    <EditForm Model="_userViewModel" OnValidSubmit="SaveUser">

        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="email"></label>
            <input id="email"
                   type="text"
                   class="form-control"
                   value="@_userViewModel.Email">
        </div>


        <div class="form-group">
            <label for="email"></label>
            <select @bind="@_userViewModel.Department" class="form-select">
                <option></option>
                <option value="Administration">Administration</option>
                <option value="InventoryManagement">Inventory Management</option>
                <option value="Sales">Sales</option>
                <option value="Purchasing">Purchasing</option>
                <option value="ProductionManagement"> Production Management</option>
            </select>
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-outline-dark" @onclick="Cancel">Cancel</button>



    </EditForm>
}

@code {
    [Parameter]
    public string UserId { get; set; } = string.Empty;

    private IdentityUser? _user;
    private Claim? departmentClaim;
    private bool userHadDepartment = true;

    private ManageUserViewModel? _userViewModel;


    protected override async void OnParametersSet()
    {
        base.OnParametersSet();

        _user = _userManager.Users.First(x => x.Id == this.UserId);

        var claims = await _userManager.GetClaimsAsync(_user);

        claims.FirstOrDefault(x => x.Type == "Department");

        if (departmentClaim == null)
        {
            userHadDepartment = false;
            departmentClaim = new Claim("Department", string.Empty);
        }

        _userViewModel = new ManageUserViewModel()
            {
                Email = _user.Email,
                Department = departmentClaim.Value
            };
    }

    private async Task SaveUser()
    {

        if (userHadDepartment)
            await _userManager.ReplaceClaimAsync(_user, departmentClaim, new Claim("Deparment", _userViewModel.Department));
        else
            await _userManager.AddClaimAsync(_user, new Claim("Department", _userViewModel.Department?.ToString()));


        _navigationManager.NavigateTo("/manageusers");
    }

    private void Cancel()
    {
        _navigationManager.NavigateTo("/manageusers");
    }
}
