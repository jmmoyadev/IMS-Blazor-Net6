@page "/products/add"
@inject IAddProductUseCase _addProductUseCase;
@inject NavigationManager _navigationManager;

@attribute [Authorize(Policy = "Inventory")]


<h3>Add Product</h3>

<br />


<EditForm Model="product" OnValidSubmit="SaveProduct">

    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    <div class="form-group">
        <label for="name">Product Name</label>
        <InputText id="name" class="form-control" @bind-Value="product.ProductName"></InputText>
    </div>

    <div class="form-group">
        <label for="quantity">Quantity</label>
        <InputNumber id="quantity" class="form-control" @bind-Value="product.Quantity"></InputNumber>
    </div>

    <div class="form-group">
        <label for="price">Price</label>
        <InputNumber id="price" class="form-control" @bind-Value="product.Price"></InputNumber>
    </div>

    <div class="form-group">
        <label for="invs">Inventories</label>
        <ProductInventoriesComponent Product="this.product"></ProductInventoriesComponent>
    </div>

    <br />
    <button type="submit" class="btn btn-primary">Save</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>

</EditForm>


@code {
    private Product product = new Product();

    private async Task SaveProduct()
    {
        await _addProductUseCase.ExecuteAsync(product);
        _navigationManager.NavigateTo("/products");

    }

    private void Cancel()
    {
        _navigationManager.NavigateTo("/products");
    }

}
